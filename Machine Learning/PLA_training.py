import pandas as pd

weights = [0, 0, 0, 0, 0, 0, 0, 0, 0]
h = []
error_threshold = 5.0
error = 100

# loading into Pandas and formatting, setting up y
df_virus_all = pd.read_csv('C:/Users/canad/Documents/dataset_analyser/virus.txt', sep=' ')
df_safe_all = pd.read_csv('C:/Users/canad/Documents/dataset_analyser/safe_files.txt', sep=' ')
columns = ['2', '3', '4', '5', '6', '7', '8', '9']
df_virus_all.columns = columns
df_safe_all.columns = columns


# split testing/training data 75/25
virus_split_index = int(len(df_virus_all.index) * 0.75)
safe_split_index = int(len(df_safe_all.index) * 0.75)
df_virus_testing = df_virus_all.iloc[:virus_split_index,:]
df_safe_testing = df_safe_all.iloc[:safe_split_index,:]

# remaining 25% for testing in this format for later
# df_2 = df.iloc[1000:,:]

frames = [df_virus_testing, df_safe_testing]
df_testing = pd.concat(frames)

# now let's create our y column as well as add bias
y = []
for i in range(len(df_virus_testing.index)):
    y.append(1)
for i in range(len(df_safe_testing.index)):
    y.append(-1)

bias = [1] * len(df_testing.index)
df_testing.insert(0, '1', bias)

# now lets create our lists for the math operations
x_testing = df_testing.values.tolist()
h = [None] * len(df_testing.index)

while(error > 0):
    # multiply x_testing by w (weights) to get h (hypothesis set)
    for i in range(len(x_testing)):
        total = 0
        for j in range(9):
            total+= x_testing[i][j] * weights[j]
        if total > 0 or total == 0:
            total = 1
        else:
            total = -1
        h[i] = total

    # note our wrong entries
    wrong_entries = []
    for i in range(len(h)):
        if h[i] == y[i]:
            continue
        else:
            wrong_entries.append(i)

    if wrong_entries == None:
        print('Done! weights are: ' + str(weights))

    else:
        # weight update formula
        #   w(t+1) = w(t) + y(t)x(t)
        # wrong_entries holds the indexes in the x list that were misclassified
        # by using wrong_entries[0], we're just picking the first wrong entry
        # it can be first wrong entry, or random
        for i in range(9):
            weights[i]+= y[wrong_entries[0]]*x_testing[wrong_entries[0]]
