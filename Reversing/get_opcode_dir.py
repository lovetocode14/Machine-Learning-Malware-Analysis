import os

''' 
file_path = '~/binaries/benign/'
output_path = '~/binaries/dumps/'
'''

file_path = input('Please enter filepath to binary directory')
output_path = input('Please enter output directory path ')
binaries_list = os.listdir(file_path)

# file path to each binary in directory
binaries_file_path = []

# file path to output for each binary
output_list = []

# list of bfd for executables
bfd_list = []

for i in range(len(binaries_list)):
    binaries_file_path.append(file_path + binaries_list[i])
    output_list.append('> ' + output_path + binaries_list[i].replace('.exe', '') + '.txt')

debug = '-d '

command_subsection = 'sudo objdump -M intel -b '

for i in range(len(binaries_list)):
    bfd = ''
    bfd_cmd = 'objdump -f ' + binaries_file_path[i] + ' > tmp.txt'
    os.system(bfd_cmd)
    f = open("tmp.txt", "r")

    # just search file for bfd format

    pei = 'pei-x86-64'
    pe = 'pe-x86-64'

    if pei in f.read():
        bfd = pei + ' '

    elif pe in f.read():
        bfd = pe + ' '

    bfd_list.append(bfd)

    os.remove("tmp.txt")

for i in range(len(binaries_list)):
    command = command_subsection + bfd_list[i] + debug + binaries_file_path[i] + output_list[i]
    os.system(command)







